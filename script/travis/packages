#!/bin/bash

source ./lib/utils.sh

# アーカイブファイルを作成
# パッケージデータベースを更新する
function update_gh_pages() {
  local tmpdir=`mktemp -d`
  local repodir=${tmpdir}/bekobrew
  local package_db=${repodir}/${PACKAGE_DATABASE_FILENAME}

  git clone --single-branch -b gh-pages git://github.com/u-aizu/bekobrew.git ${repodir}

  for package_name in `get_all_package_names`; do
    # パッケージ一覧に存在しない場合は追加する
    source ./packages/${package_name}/BEKOBUILD
    local package_fullname=${package_name}-${package_version}-${package_release}
    local archive_filename=${repodir}/packages/${package_fullname}.tar.bz2
    mkdir -p ${repodir}/packages || true
    grep ${package_fullname} ${package_db}
    local ret=$?
    if [ $ret -ne 0 ]; then
      # パッケージ一覧に追加する
      printf "${package_fullname}\t"\
        "https://u-aizu.github.com/bekobrew/packages/${package_fullname}-${package_version}-${package_release}.tar.bz2\t"\
        "${package_desc}"\
        >> ${package_db}
      # アーカイブファイルを追加する
      pushd ./packages
      tar cvf ${archive_filename} ${package_name}
      popd

      # コミット
      pushd ${repodir}
      git add ${package_db}
      git commit -m "update ${package_db}"
      git add ${archive_filename}
      git commit -m "add ${archive_filename}"
    fi
  done

  # push
  pushd ${repodir}
  git push --quiet https://${GITHUB_TOKEN}@github.com/u-aizu/bekobrew.git gh-pages 2> /dev/null
  popd
}

update_gh_pages

